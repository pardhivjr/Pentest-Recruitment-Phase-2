The given file is supposedly msg.txt: ASCII text, with very long lines (65536), with no line terminators.
no conventional string decoding methods are possible.

found out that it was multiple times encoded base 64.


PYTHON PROGRAM TO DECODE THE FILE:
import base64

import base64

def decode_base64(input_file_path, output_file_path):
    with open(input_file_path, 'r') as f:
        encoded_data = f.read()

    while True:
        try:
            decoded_data = base64.b64decode(encoded_data).decode('utf-8')
            encoded_data = decoded_data
        except:
            break

    with open(output_file_path, 'w') as output_file:
        output_file.write(decoded_data)

    return decoded_data

input_file_path = 'msg.txt'
output_file_path = 'decoded_result.txt'

decoded_result = decode_base64(input_file_path, output_file_path)
print(f'Decoded result saved to {output_file_path}')

The code runs a loop, till the decoding is no longer possible.
and prints the output to an external file.

OUTPUT FILE:

import codecs
a = [63, 71, 46, 125, 83, 94, 52, 44, 41, 35, 84, 103, 70, 40, 61, 99, 101, 79, 68, 55, 46, 66, 60, 36, 115, 66, 67, 57, 54, 72, 70, 113, 126, 80, 44, 110, 76, 118]
b = [76, 62, 64, 9, 40, 49, 69, 28, 26, 82, 39, 20, 53, 27, 78, 82, 87, 121, 42, 88, 64, 114, 82, 86, 64, 117, 118, 15, 89, 124, 112, 69, 15, 97, 28, 88, 60, 11]

s = input('Enter flag: ')

x = ''.join([chr(a^b) for a,b in zip(a,b)])

out = codecs.decode(x,'rot-13')

if s == out:
    print('Correct')
else:
    print('Wrong')


TO FIND THE FLAG:

import codecs
a = [63, 71, 46, 125, 83, 94, 52, 44, 41, 35, 84, 103, 70, 40, 61, 99, 101, 79, 68, 55, 46, 66, 60, 36, 115, 66, 67, 57, 54, 72, 70, 113, 126, 80, 44, 110, 76, 118]
b = [76, 62, 64, 9, 40, 49, 69, 28, 26, 82, 39, 20, 53, 27, 78, 82, 87, 121, 42, 88, 64, 114, 82, 86, 64, 117, 118, 15, 89, 124, 112, 69, 15, 97, 28, 88, 60, 11]



x = ''.join([chr(a^b) for a,b in zip(a,b)])

out = codecs.decode(x,'rot-13')
print(out)
 
